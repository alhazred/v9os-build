From 17a12b9efaef1f92d91b51dd8fbaa452aa138451 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Fri, 4 Sep 2015 10:38:28 -0700
Subject: [PATCH 28/34] Compatibility for SunSSH_1.5* should include old DH KEx
 algos

We use the kex compat mechanism here to recognise old SunSSH
versions and present a kex proposal that always includes the
dh-group14 and -group1 algorithms.

Without this, an old SunSSH client cannot connect to our
new daemon.
---
 compat.c | 31 ++++++++++++++++++++++++++++++-
 1 file changed, 30 insertions(+), 1 deletion(-)

diff --git a/compat.c b/compat.c
index 69a104fb..55fb3d93 100644
--- a/compat.c
+++ b/compat.c
@@ -93,7 +93,9 @@
 		  "OpenSSH_3.0*,"
 		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
 		{ "OpenSSH_3.*",	SSH_OLD_FORWARD_ADDR },
-		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
+		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
+					SSH_OLD_DHGEX},
+		{ "Sun_SSH_1.5*",	SSH_OLD_DHGEX},
 		{ "OpenSSH_4*",		0 },
 		{ "OpenSSH_5*",		SSH_NEW_OPENSSH|SSH_BUG_DYNAMIC_RPORT},
 		{ "OpenSSH_6.6.1*",	SSH_NEW_OPENSSH},
@@ -279,6 +281,31 @@
 	return pkalg_prop;
 }
 
+/*
+ * Adds an algorithm to the end of a proposal list, only if the algorithm is
+ * not already present.
+ */
+static char *
+append_proposal(char *proposal, const char *append)
+{
+	Buffer b;
+	char *fix_prop;
+
+	if (strstr(proposal, append) != NULL)
+		return proposal;
+
+	buffer_init(&b);
+	buffer_append(&b, proposal, strlen(proposal));
+	if (buffer_len(&b) > 0)
+		buffer_append(&b, ",", 1);
+	buffer_append(&b, append, strlen(append));
+	buffer_append(&b, "\0", 1);
+	fix_prop = xstrdup((char *)buffer_ptr(&b));
+	buffer_free(&b);
+
+	return fix_prop;
+}
+
 char *
 compat_kex_proposal(char *p)
 {
@@ -294,6 +321,8 @@
 		    "diffie-hellman-group-exchange-sha256,"
 		    "diffie-hellman-group-exchange-sha1")) == NULL)
 			fatal("match_filter_list failed");
+		p = append_proposal(p, "diffie-hellman-group14-sha1");
+		p = append_proposal(p, "diffie-hellman-group1-sha1");
 	}
 	debug2("%s: compat KEX proposal: %s", __func__, p);
 	if (*p == '\0')
-- 
2.11.0

